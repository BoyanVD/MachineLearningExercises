dataset = read.csv('Data.csv')
dataset = read.csv('Salary_Data.csv')
View(dataset)
View(dataset)
setwd("C:/Users/HP/Desktop/ML_Course/PythonAndRFiles/Regression/SimpleLinearRegression")
View(dataset)
dataset = read.csv('Salary_Data.csv')
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(test_set)
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
View(regressor)
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
y_pred
View(test_set)
install.packages('ggplot2')
library(ggplot2)
#Visualising the training set results
y_train_pred = predict(regressor, newdata = training_set)
ggplot() +
#Plotting all geometric points
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
#Plotting regression line
geom_line(aes(x = training_set$YearsExperience, y = y_train_pred),
colour = 'blue') +
#Title
ggtitle('Salary vs Experience (Training set)') +
#Naming x axis
xlab('Years of experience') +
#Naming y axis
ylab('Salary ($)')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'green') +
geom_line(aes(x = training_set$YearsExperience, y = y_train_pred),
colour = 'blue') +
ggtitle('Salary vs Experience (Test set)') +
xlab('Years of experience') +
ylab('Salary ($)')
employeeYearsOfExperience = readline(prompt = "Please enter employee's experience : ")
predictedSalary = predict(regressor, newdata = employeeYearsOfExperience)
print("The predicted salary, based on other employees is : ", predictedSalary)
employeeYearsOfExperience = readline(prompt = "Please enter employee's experience : ")
employeeYearsOfExperience = readline(prompt = "Please enter employee's experience : ")
employeeYearsOfExperience <- readline(prompt = "Please enter employee's experience : ")
employeeYearsOfExperience <- readline(prompt = "Please enter employee's experience : ")
1
#Predicting salary for new observation
employeeYearsOfExperience <- readline(prompt = "Please enter employee's experience : ");
#Predicting salary for new observation
employeeYearsOfExperience <- readline(prompt = "Please enter employee's experience : ")
employeeYearsOfExperience = readdouble()
print(employeeYearsOfExperience)
readdouble <- function()
{
experience <- readline(prompt="Enter employee years of experience : ")
return(as.double(experience))
}
employeeYearsOfExperience = readdouble()
readdouble <- function()
{
experience <- readline(prompt="Enter employee years of experience : ")
return(as.numeric(experience))
}
employeeYearsOfExperience = readdouble()
readdouble <- function()
{
experience <- readline(prompt="Enter employee years of experience : ")
return(as.numeric(experience))
}
employeeYearsOfExperience = readdouble()
print(employeeYearsOfExperience)
predictedSalary = predict(regressor, newdata = employeeYearsOfExperience)
print("The predicted salary, based on other employees is : ", predictedSalary)
predictedSalary = predict(regressor, newdata = employeeYearsOfExperience)
View(test_set)
print(typeof(dataset))
print(typeof(test_set))
View(test_set)
x <- c(employeeYearsOfExperience, 0)
predictedSalary = predict(regressor, newdata = x)
View(test_set)
x <- data.frame(YearsOfExperience = employeeYearsOfExperience, Salary = 0)
predictedSalary = predict(regressor, newdata = x)
View(test_set)
x <- data.frame(YearsExperience = employeeYearsOfExperience, Salary = 0)
predictedSalary = predict(regressor, newdata = x)
print(predictedSalary)
print(predictedSalary$Salary)
print("Employee's predicted salary, based on other employees is : ", x$Salary)
x <- data.frame(YearsExperience = employeeYearsOfExperience, Salary = 0)
predictedSalary = predict(regressor, newdata = x)
print("Employee's predicted salary, based on other employees is : ", x$Salary)
print("Employee's predicted salary, based on other employees is : ")
print(x)
x <- data.frame(YearsExperience = employeeYearsOfExperience, Salary = 0)
predictedSalary = predict(regressor, newdata = x)
print("Employee's predicted salary, based on other employees is : ")
print(x)
print("Employee's predicted salary, based on other employees is : ")
print(predictedSalary)
print(predictedSalary[1])
print(predictedSalary[1])
print(predictedSalary[2])
print(predictedSalary[1,1])
print(unname(predictedSalary))
print("Employee's predicted salary, based on other employees is : ")
print(unname(predictedSalary))
